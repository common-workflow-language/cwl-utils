[tox]
envlist =
  py3{9,10,11,12,13,14}-lint,
  py3{9,10,11,12,13,14}-unit,
  py3{9,10,11,12,13,14}-bandit,
  py3{9,10,11,12,13,14}-mypy,
  py312-lint-readme,
  py312-pydocstyle
isolated_build = True
skip_missing_interpreters = True

[gh-actions]
python =
  3.9: py39
  3.10: py310
  3.11: py311
  3.12: py312
  3.13: py313
  3.14: py314

[testenv]
description =
  py3{9,10,11,12,13,14}-unit: Run the unit tests
  py3{9,10,11,12,13,14}-lint: Lint the Python code
  py3{9,10,11,12,13,14}-bandit: Search for common security issues
  py3{9,10,11,12,13,14}-mypy: Check for type safety
  py312-pydocstyle: docstring style checker
  py312-lint-readme: Lint the README.rst->.md conversion

passenv =
  CI
  GITHUB_*
deps =
  py3{9,10,11,12,13,14}-{unit,mypy}: -rrequirements.txt
  py3{9,10,11,12,13,14}-{unit,mypy}: -rtest-requirements.txt
  py3{9,10,11,12,13,14}-lint: -rlint-requirements.txt
  py3{9,10,11,12,13,14}-bandit: bandit
  py3{9,10,11,12,13,14}-mypy: -rmypy-requirements.txt

setenv =
  py3{9,10,11,12,13,14}-unit: LC_ALL = C.UTF-8

commands =
  py3{9,10,11,12,13,14}-unit: python -m pip install -U pip setuptools wheel
  py3{9,10,11,12,13,14}-unit: make coverage-report coverage.xml PYTEST_EXTRA={posargs}
  py3{9,10,11,12,13,14}-bandit: bandit --recursive cwl_utils
  py3{9,10,11,12,13,14}-lint: make flake8
  py3{9,10,11,12,13,14}-lint: make format-check
  py3{9,10,11,12,13,14}-mypy: make mypy

allowlist_externals =
  py3{9,10,11,12,13,14}-lint: flake8
  py3{9,10,11,12,13,14}-lint: black
  py3{9,10,11,12,13,14}-{mypy,shellcheck,lint,unit}: make

skip_install =
  py3{9,10,11,12,13,14}-lint: true
  py3{9,10,11,12,13,14}-bandit: true

extras =
  py3{9,10,11,12,13,14}-unit: pretty

[testenv:py312-pydocstyle]
allowlist_externals = make
commands = make pydocstyle
deps =
    ruff
skip_install = true

[testenv:py312-lint-readme]
description = Lint the README.rst->.md conversion
commands =
  make clean dist
  twine check dist/cwl[-_]utils*
deps =
    twine
    build
    readme_renderer[rst]
skip_install = true
